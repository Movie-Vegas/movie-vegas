{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ayettey\\\\Desktop\\\\movie-vegas\\\\src\\\\view.js\";\nimport React from \"react\";\nimport or from \"./or.jpg\";\nimport ReactDOM from \"react-dom\";\n\nclass View extends React.Component {\n  /**\r\n   * model for Movie-vegas\r\n   * declare class variables/attributes as private (local var and Accessor as a object literal);\r\n   * @type {Object}\r\n   */\n  renderMovieDetails(xhr, data) {\n    if (xhr !== undefined) {\n      xhr.addEventListener(\"readystatechange\", function () {\n        ReactDOM.findDOMNode(document.getElementById('item')).querySelectorAll('table').forEach(function (val) {\n          val.remove();\n        });\n\n        if (this.readyState === this.DONE) {\n          let obj = this.responseText;\n          let stop = 0;\n          let time = setInterval(function () {\n            stop += stop + 1;\n\n            if (JSON.parse(obj).total_results === 0) {\n              ReactDOM.findDOMNode(document.getElementById('item')).innerHTML = \"<table id='items'><tr><td>\" + \"<p id='search_result'>Your search yield no results check your spellings and try again \" + \" </p> </td> </tr></table>\";\n              clearInterval(time);\n            } else {\n              let result = JSON.parse(obj).results;\n\n              for (let x in result) {\n                if (stop === 1) {\n                  ReactDOM.findDOMNode(document.getElementById('qty')).innerHTML = JSON.parse(obj).total_pages;\n                  let img = \"http://image.tmdb.org/t/p/w185/\" + result[x].poster_path;\n                  ReactDOM.findDOMNode(document.getElementById('item')).innerHTML += \"<table id='items'>\\n                                     <tbody><tr><tr><th ><img  style='float:left; width: 15%' src=\\\"\".concat(img, \"\\\"/>\\n                                     <div id='movie_title'><span id='vote_average'>\").concat(result[x].vote_average, \"</span>\\n                                      <span class='movie_title'> \").concat(result[x].original_title, \"</span></div></span> \\n                                      <div id='overview'>\").concat(result[x].overview.substr(0, 720), \"<div> </div></div> \\n                                      <div id='emotional'> <span class='feelings'>&star;</span><span>Rating</span>\\n                                      <span class='feelings'>&heartsuit;</span> <span>  Favorite</span><span class='feelings'>&#9016;</span>\\n                                      <span>  Add to list</span><span class='feelings'>&#9003;</span> <span>  Remove</span>\\n                                      </div> </th> </tr> <tr> <td width='400'> </td> </tr> </tr></tbody></table>\");\n                  clearInterval(time);\n                }\n              }\n            }\n          }, 1000);\n        } else {}\n      });\n      xhr.responseType = \"text\";\n      xhr.send(data);\n    }\n\n    return React.createElement(\"div\", {\n      id: \"scroll_list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"item\",\n      ref: \"item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"total_pages\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"total_pages\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Total Pages \"), React.createElement(\"div\", {\n      id: \"qty\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), \" \"), \" \"));\n    /*\r\n                  }\r\n    return document.getElementById(\"items\").innerHTML=page;\r\n      /*\r\n      \"<div id=\"re\"> <div  id='scroll_list'> <table  id='items'> </table> </div>\");\r\n                                 </div>\"*/\n  }\n\n}\n\nexport default View;","map":{"version":3,"sources":["C:\\Users\\Ayettey\\Desktop\\movie-vegas\\src\\view.js"],"names":["React","or","ReactDOM","View","Component","renderMovieDetails","xhr","data","undefined","addEventListener","findDOMNode","document","getElementById","querySelectorAll","forEach","val","remove","readyState","DONE","obj","responseText","stop","time","setInterval","JSON","parse","total_results","innerHTML","clearInterval","result","results","x","total_pages","img","poster_path","vote_average","original_title","overview","substr","responseType","send"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport  or from  \"./or.jpg\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\n\r\n\r\nclass View  extends React.Component{\r\n\r\n\r\n    /**\r\n     * model for Movie-vegas\r\n     * declare class variables/attributes as private (local var and Accessor as a object literal);\r\n     * @type {Object}\r\n     */\r\n\r\n\r\n\r\n\r\n    renderMovieDetails(xhr, data) {\r\n         if(xhr!==undefined){\r\n\r\n             xhr.addEventListener(\"readystatechange\",function () {\r\n              ReactDOM.findDOMNode( document.getElementById('item')).\r\n              querySelectorAll('table').forEach(function (val) {\r\n                  val.remove();\r\n\r\n              });\r\n\r\n                 if (this.readyState === this.DONE) {\r\n\r\n                     let obj=this.responseText;\r\n                     let stop = 0;\r\n                     let time = setInterval(function () {\r\n                         stop += stop + 1;\r\n\r\n                         if(JSON.parse(obj).total_results===0) {\r\n\r\n                             ReactDOM.findDOMNode(document.getElementById('item')).\r\n                                 innerHTML = \"<table id='items'><tr><td>\" +\r\n                                 \"<p id='search_result'>Your search yield no results check your spellings and try again \" +\r\n                                 \" </p> </td> </tr></table>\"\r\n                                   clearInterval(time);\r\n\r\n\r\n                         }else {\r\n                             let result = JSON.parse(obj).results;\r\n                             for (let x in result) {\r\n\r\n\r\n                                 if (stop === 1) {\r\n                                     ReactDOM.findDOMNode(document.getElementById('qty')).innerHTML = JSON.parse(obj).total_pages;\r\n\r\n\r\n                                     let img = \"http://image.tmdb.org/t/p/w185/\" + result[x].poster_path;\r\n                                     ReactDOM.findDOMNode(document.getElementById('item')).innerHTML += `<table id='items'>\r\n                                     <tbody><tr><tr><th ><img  style='float:left; width: 15%' src=\"${img}\"/>\r\n                                     <div id='movie_title'><span id='vote_average'>${result[x].vote_average}</span>\r\n                                      <span class='movie_title'> ${result[x].original_title}</span></div></span> \r\n                                      <div id='overview'>${result[x].overview.substr(0, 720)}<div> </div></div> \r\n                                      <div id='emotional'> <span class='feelings'>&star;</span><span>Rating</span>\r\n                                      <span class='feelings'>&heartsuit;</span> <span>  Favorite</span><span class='feelings'>&#9016;</span>\r\n                                      <span>  Add to list</span><span class='feelings'>&#9003;</span> <span>  Remove</span>\r\n                                      </div> </th> </tr> <tr> <td width='400'> </td> </tr> </tr></tbody></table>`;\r\n\r\n\r\n                                     clearInterval(time);\r\n                                 }\r\n\r\n\r\n                             }\r\n                               }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n             }, 1000)\r\n\r\n                 }else {\r\n\r\n                 }\r\n\r\n             });\r\n\r\n              xhr.responseType = \"text\";\r\n              xhr.send(data);\r\n         }\r\n\r\n\r\n        return (<div id='scroll_list'>\r\n            <div id=\"item\" ref=\"item\"><div id=\"total_pages\"><div className=\"total_pages\">Total Pages </div><div id=\"qty\">\r\n\r\n            </div> </div> </div>\r\n        </div>);\r\n\r\n\r\n        /*\r\n                      }\r\n\r\nreturn document.getElementById(\"items\").innerHTML=page;\r\n\r\n        /*\r\n\r\n        \"<div id=\"re\"> <div  id='scroll_list'> <table  id='items'> </table> </div>\");\r\n                                     </div>\"*/\r\n\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport  default View;"]},"metadata":{},"sourceType":"module"}