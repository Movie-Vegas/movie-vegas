{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ayettey\\\\Desktop\\\\movie-vegas\\\\src\\\\control.js\";\nimport React from \"react\";\nimport View from \"./view\";\nimport Model from \"./model\";\nimport TableData from './test';\nimport { labeledStatement } from \"@babel/types\";\n\nclass Control extends React.Component {\n  constructor(view, model) {\n    super();\n    this.model = model;\n    this.isXhrInprogress = false;\n    this.view = view;\n    this.state = {\n      rating: \"hsjd\"\n    };\n  }\n\n  setRating(rating) {\n    this.model.services.setRating(rating);\n  }\n\n  setLikes(likes) {\n    this.model.services.setLikes(likes);\n  }\n\n  addGoodMovies(index, goodMovies) {\n    this.model.services.addGoodMovies(index, goodMovies);\n  }\n\n  addBadMovies(index, badMovies) {\n    this.model.services.addBadMovies(index, badMovies);\n  }\n\n  setResult(result) {\n    this.model.services.setResult(result);\n  }\n\n  setFavourites(favourites) {\n    this.model.services.setFavourites(favourites);\n  }\n\n  addMovies(index, addMovie) {\n    this.model.services.addMovies(index, addMovie);\n  }\n\n  setWatchLater(watchLater) {\n    this.model.services.setWatchLater(watchLater);\n  }\n  /**The CORS request was attempted with the credentials flag set, but the server is configured using the wildcard (\"*\")\r\n   * as the value of Access-Control-Allow-Origin, which doesn't allow the use of credentials.\r\n     To correct this problem on the client side, simply ensure that the credentials flag's value is false when issuing your CORS request.\r\n   **/\n\n\n  search(method, query, data) {\n    this.model.services.XHReq(method, query);\n    this.isXhrInprogress = true;\n  }\n\n  updateView() {\n    if (this.isXhrInprogress) {\n      let view = this.view;\n      let model = this.model;\n      this.model.services.getXHR().addEventListener(\"readystatechange\", function () {\n        if (this.readyState === this.DONE) {\n          let results = JSON.parse(this.responseText).results;\n\n          for (let x in results) {\n            if (results.hasOwnProperty(x)) {\n              /** console.log(\"Story: \"+results[x].overview)\r\n               console.log(\"Title: \"+results[x].original_title)\r\n               console.log(\"poster: \"+results[x].poster_path)\r\n               console.log(\"Release_date: \"+results[x].release_date)\r\n               console.log(\"Title: \"+results[x].title)\r\n               console.log(\"Counter \"+x);**/\n              return React.createElement(\"div\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 95\n                },\n                __self: this\n              }, view.printMovieVegasDetails(results[x]));\n            }\n          }\n        }\n      });\n      this.model.services.getXHR().responseType = \"text\";\n      this.model.services.getXHR().send(\"{}\");\n    }\n  }\n\n}\n\nexport default Control;","map":{"version":3,"sources":["C:\\Users\\Ayettey\\Desktop\\movie-vegas\\src\\control.js"],"names":["React","View","Model","TableData","labeledStatement","Control","Component","constructor","view","model","isXhrInprogress","state","rating","setRating","services","setLikes","likes","addGoodMovies","index","goodMovies","addBadMovies","badMovies","setResult","result","setFavourites","favourites","addMovies","addMovie","setWatchLater","watchLater","search","method","query","data","XHReq","updateView","getXHR","addEventListener","readyState","DONE","results","JSON","parse","responseText","x","hasOwnProperty","printMovieVegasDetails","responseType","send"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport View from \"./view\"\r\nimport Model from \"./model\";\r\nimport TableData from './test'\r\nimport {labeledStatement} from \"@babel/types\";\r\n\r\nclass Control extends React.Component{\r\n\r\n\r\n\r\n    constructor(view,model){\r\n               super()\r\n               this.model=model;\r\n               this.isXhrInprogress=false;\r\n               this.view=view;\r\n                this.state={\r\n                    rating:\"hsjd\"\r\n                }\r\n            }\r\n\r\n\r\n            setRating(rating) {\r\n                this.model.services.setRating(rating);\r\n            }\r\n\r\n            setLikes(likes) {\r\n                this.model.services.setLikes(likes);\r\n\r\n            }\r\n\r\n            addGoodMovies(index, goodMovies) {\r\n                this.model.services.addGoodMovies(index, goodMovies);\r\n\r\n            }\r\n\r\n            addBadMovies(index, badMovies) {\r\n                this.model.services.addBadMovies(index, badMovies);\r\n\r\n            }\r\n\r\n            setResult(result) {\r\n                this.model.services.setResult(result);\r\n\r\n            }\r\n\r\n            setFavourites(favourites) {\r\n                this.model.services.setFavourites(favourites);\r\n\r\n            }\r\n\r\n\r\n            addMovies(index, addMovie) {\r\n                this.model.services.addMovies(index, addMovie);\r\n\r\n            }\r\n\r\n\r\n            setWatchLater(watchLater) {\r\n                this.model.services.setWatchLater(watchLater);\r\n\r\n            }\r\n    /**The CORS request was attempted with the credentials flag set, but the server is configured using the wildcard (\"*\")\r\n     * as the value of Access-Control-Allow-Origin, which doesn't allow the use of credentials.\r\n\r\n     To correct this problem on the client side, simply ensure that the credentials flag's value is false when issuing your CORS request.\r\n     **/\r\n            search(method,query,data) {\r\n               this.model.services.XHReq(method,query);\r\n               this.isXhrInprogress=true;\r\n\r\n\r\n             }\r\n\r\n\r\n          updateView (){\r\n\r\n                      if(this.isXhrInprogress){\r\n                          let view=this.view;\r\n                          let model=this.model;\r\n\r\n\r\n                          this.model.services.getXHR().addEventListener(\"readystatechange\", function () {\r\n                              if (this.readyState === this.DONE) {\r\n                                   let results=JSON.parse(this.responseText).results;\r\n                                   for(let x in  results){\r\n                                       if(results.hasOwnProperty(x)){\r\n                                          /** console.log(\"Story: \"+results[x].overview)\r\n                                           console.log(\"Title: \"+results[x].original_title)\r\n                                           console.log(\"poster: \"+results[x].poster_path)\r\n                                           console.log(\"Release_date: \"+results[x].release_date)\r\n                                           console.log(\"Title: \"+results[x].title)\r\n                                           console.log(\"Counter \"+x);**/\r\n\r\n\r\n                                           return (<div>{view.printMovieVegasDetails(results[x])}</div>);\r\n\r\n\r\n                                       }\r\n\r\n                                   }\r\n\r\n\r\n\r\n                              }\r\n                          });\r\n                          this.model.services.getXHR().responseType=\"text\";\r\n                          this.model.services.getXHR().send(\"{}\");\r\n\r\n\r\n\r\n                      }\r\n\r\n\r\n\r\n\r\n\r\n             }\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport default Control;\r\n"]},"metadata":{},"sourceType":"module"}