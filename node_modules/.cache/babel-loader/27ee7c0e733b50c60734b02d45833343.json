{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ayettey\\\\Desktop\\\\movie-vegas\\\\src\\\\view.js\";\nimport React from \"react\";\nimport or from \"./or.jpg\";\nimport ReactDOM from \"react-dom\";\n\nclass View extends React.Component {\n  /**\r\n   * model for Movie-vegas\r\n   * declare class variables/attributes as private (local var and Accessor as a object literal);\r\n   * @type {Object}\r\n   */\n  renderMovieDetails(xhr, page, data) {\n    let xDirection = \"\",\n        yDirection = \"\",\n        oldY = 0,\n        oldX = 0;\n\n    if (xhr !== undefined) {\n      xhr.addEventListener(\"readystatechange\", function () {\n        if (this.readyState === this.DONE) {\n          let obj = this.responseText;\n\n          if ([\"\", \" \"].includes(obj)) {\n            alert(\"Hmm. We’re having trouble finding that Query.\\n\" + \"\\n\" + \"We can’t connect to the server at \" + navigator.appName + \"\\n\" + \"If that address is correct, here are three other things you can try:\\n\" + \"\\n\" + \"    Try again later.\\n\" + \"    Check your network connection.\\n\" + \"    If you are connected but behind a firewall,\" + navigator.appName + \" check that \" + navigator.appName + \"has permission to access the Web.\");\n          } else {\n            if (page <= JSON.parse(obj).total_pages) {\n              ReactDOM.findDOMNode(document.getElementById('item')).querySelectorAll('table').forEach(function (val) {\n                val.remove();\n              });\n            }\n\n            let stop = 0;\n            let time = setInterval(function () {\n              stop += stop + 1;\n\n              if (JSON.parse(obj).total_results === 0) {\n                ReactDOM.findDOMNode(document.getElementById('item')).querySelectorAll('table').forEach(function (val) {\n                  val.remove();\n                });\n                ReactDOM.findDOMNode(document.getElementById('req_error')).innerHTML = \"<table class='req_error'><tr><td>\" + \"<p id='search_result'>Your search yield no results check your spellings and try again \" + \" </p> </td> </tr></table>\";\n                clearInterval(time);\n                return false;\n              } else {\n                let result = JSON.parse(obj).results;\n\n                for (let x in result) {\n                  if (stop === 1 && result.hasOwnProperty(x)) {\n                    ReactDOM.findDOMNode(document.getElementById('req_error')).querySelectorAll('table').forEach(function (val) {\n                      val.remove();\n                    });\n                    let img = \"http://image.tmdb.org/t/p/w185/\" + result[x].poster_path;\n                    ReactDOM.findDOMNode(document.getElementById('item')).innerHTML += \"<table id='items'>\\n                                     <tbody><tr><tr><th ><img  style='float:left; width: 15%' src=\\\"\".concat(img, \"\\\"/>\\n                                     <div id='movie_title'><div id='vote_average'><div>\").concat(result[x].vote_average, \"</div></div>\\n                                      <span class='movie_title'> \").concat(result[x].original_title, \"</span></div></span> \\n                                      <div id='overview'>\").concat(result[x].overview.substr(0, 720), \"<div> </div></div> \\n                                      <div id='emotional'> <span class=\\\"rating\\\" class='feelings'  >&star;</span>\\n                                      <span class=\\\"rating_content\\\"><span class=\\\"stars\\\" id=\\\"star_1\\\">&star;</span><span class=\\\"stars\\\" id=\\\"star_2\\\">&star;\\n                                      </span> <span class=\\\"stars\\\" id=\\\"star_3\\\">&star;</span> <span class=\\\"stars\\\" id=\\\"star_4\\\">&star;</span>\\n                                       <span class=\\\"stars\\\" id=\\\"star_5\\\">&star;</span>  </span><span>Rating</span>\\n                                      <span class='feelings'>&heartsuit;</span> <span>  Favorite</span><span class='feelings'>&#9016;</span>\\n                                      <span>  Add to list</span><span class='feelings'>&#9003;</span> <span>  Remove</span>\\n                                      </div> </th> </tr> <tr> <td width='400'> </td> </tr> </tr></tbody></table>\");\n                    ReactDOM.findDOMNode(document.getElementById('qty')).innerHTML = JSON.parse(obj).total_pages;\n                    let ratingContent = document.getElementsByClassName(\"rating_content\");\n                    let rating = document.getElementsByClassName(\"rating\");\n                    let stars = document.getElementsByClassName(\"stars\");\n                    ['click', 'mouseleave', 'mouseenter'].forEach(function (event) {\n                      for (let x in rating) {\n                        rating.item(Number(x)).addEventListener(event, function () {\n                          ratingContent.item(Number(x)).style.display = \"inline\";\n                          stars[x].addEventListener(event, getMouseDirection, false);\n                          stars[x].addEventListener(event, function (event) {\n                            event.preventDefault();\n                            event.stopImmediatePropagation();\n                            event.stopPropagation();\n\n                            if (event.type === \"mouseleave\") {\n                              ratingContent.item(Number(x)).style.display = \"none\";\n                              return false;\n                            }\n\n                            if (event.type === \"mouseenter\") {\n                              for (let i = 0; i < stars.length; i++) {\n                                [\"mousemove\"].forEach(function (val) {\n                                  stars[i].addEventListener(val, function (e) {\n                                    event.preventDefault();\n                                    event.stopPropagation();\n                                    event.stopImmediatePropagation();\n\n                                    if (oldX < e.pageX) {\n                                      xDirection = \"right\";\n                                    } else {\n                                      xDirection = \"left\";\n                                    } //deal with the vertical case\n\n\n                                    if (oldY < e.pageY) {\n                                      yDirection = \"down\";\n                                    } else {\n                                      yDirection = \"up\";\n                                    }\n\n                                    oldX = e.pageX;\n                                    oldY = e.pageY;\n\n                                    if ([\"right\"].includes(xDirection)) {\n                                      stars[i].style.color = \"gold\";\n                                    } else if ([\"left\"].includes(xDirection)) {\n                                      stars[i].style.color = \"white\";\n                                    }\n                                  }, false);\n                                });\n                              }\n\n                              ratingContent.item(Number(x)).style.display = \"inline\";\n                              return false;\n                            }\n                          });\n                          this.addEventListener(event, function (event) {\n                            event.preventDefault();\n\n                            if (event.type === \"mouseleave\") {\n                              ratingContent.item(Number(x)).style.display = \"none\";\n                              return false;\n                            }\n                          });\n                          return false;\n                        });\n                      }\n                    });\n                    ReactDOM.findDOMNode(document.getElementById('total_pages_title')).innerHTML = \"Total pages\";\n                    clearInterval(time);\n                  }\n                }\n              }\n            }, 1000);\n          }\n        } else {\n          ReactDOM.findDOMNode(document.getElementById('total_pages_title')).innerHTML = \"loading...\";\n        }\n      });\n      xhr.responseType = \"text\";\n      xhr.send(data);\n    }\n\n    return React.createElement(\"div\", {\n      id: \"scroll_list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"item\",\n      ref: \"item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"req_error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, \" \"), React.createElement(\"div\", {\n      id: \"total_pages\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"total_pages_title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, \"Total Pages \"), React.createElement(\"div\", {\n      id: \"qty\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }), \" \"), \" \"));\n  }\n\n}\n\nvar xDirection = \"\";\nvar yDirection = \"\";\nvar oldX = 0;\nvar oldY = 0;\n\nfunction getMouseDirection(e) {\n  //deal with the horizontal case\n  if (oldX < e.pageX) {\n    xDirection = \"right\";\n  } else {\n    xDirection = \"left\";\n  } //deal with the vertical case\n\n\n  if (oldY < e.pageY) {\n    yDirection = \"down\";\n  } else {\n    yDirection = \"up\";\n  }\n\n  oldX = e.pageX;\n  oldY = e.pageY;\n  console.log(xDirection + \" \" + yDirection);\n}\n\nexport default View;","map":{"version":3,"sources":["C:\\Users\\Ayettey\\Desktop\\movie-vegas\\src\\view.js"],"names":["React","or","ReactDOM","View","Component","renderMovieDetails","xhr","page","data","xDirection","yDirection","oldY","oldX","undefined","addEventListener","readyState","DONE","obj","responseText","includes","alert","navigator","appName","JSON","parse","total_pages","findDOMNode","document","getElementById","querySelectorAll","forEach","val","remove","stop","time","setInterval","total_results","innerHTML","clearInterval","result","results","x","hasOwnProperty","img","poster_path","vote_average","original_title","overview","substr","ratingContent","getElementsByClassName","rating","stars","event","item","Number","style","display","getMouseDirection","preventDefault","stopImmediatePropagation","stopPropagation","type","i","length","e","pageX","pageY","color","responseType","send","console","log"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport  or from  \"./or.jpg\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\n\r\n\r\nclass View  extends React.Component{\r\n\r\n\r\n    /**\r\n     * model for Movie-vegas\r\n     * declare class variables/attributes as private (local var and Accessor as a object literal);\r\n     * @type {Object}\r\n     */\r\n\r\n\r\n\r\n    renderMovieDetails(xhr,page,data) {\r\n        let  xDirection=\"\",yDirection=\"\",oldY=0,oldX=0;\r\n         if(xhr!==undefined){\r\n\r\n\r\n\r\n\r\n             xhr.addEventListener(\"readystatechange\",function () {\r\n\r\n\r\n\r\n\r\n                 if (this.readyState === this.DONE) {\r\n\r\n                     let obj=this.responseText;\r\n\r\n\r\n\r\n\r\n\r\n                     if([\"\", \" \"].includes(obj)){\r\n\r\n\r\n\r\n\r\n                         alert(\"Hmm. We’re having trouble finding that Query.\\n\" +\r\n                             \"\\n\" +\r\n                             \"We can’t connect to the server at \" + navigator.appName +\r\n                             \"\\n\" +\r\n                             \"If that address is correct, here are three other things you can try:\\n\" +\r\n                             \"\\n\" +\r\n                             \"    Try again later.\\n\" +\r\n                             \"    Check your network connection.\\n\" +\r\n                             \"    If you are connected but behind a firewall,\" + navigator.appName +\r\n                             \" check that \" + navigator.appName + \"has permission to access the Web.\");\r\n\r\n\r\n\r\n\r\n                     }else {\r\n                         if(page <= JSON.parse(obj).total_pages){\r\n                             ReactDOM.findDOMNode( document.getElementById('item')).\r\n                             querySelectorAll('table').forEach(function (val) {\r\n                                 val.remove();\r\n\r\n                             });\r\n\r\n                         }\r\n\r\n\r\n                     let stop = 0;\r\n                     let time = setInterval(function () {\r\n                         stop += stop + 1;\r\n\r\n                         if(JSON.parse(obj).total_results===0) {\r\n\r\n\r\n                             ReactDOM.findDOMNode( document.getElementById('item')).\r\n                             querySelectorAll('table').forEach(function (val) {\r\n                                 val.remove();\r\n\r\n                             });\r\n\r\n\r\n                             ReactDOM.findDOMNode(document.getElementById('req_error')).\r\n                                 innerHTML = \"<table class='req_error'><tr><td>\" +\r\n                                 \"<p id='search_result'>Your search yield no results check your spellings and try again \" +\r\n                                 \" </p> </td> </tr></table>\"\r\n\r\n\r\n\r\n                             clearInterval(time);\r\n\r\n                             return false;\r\n\r\n\r\n\r\n                         }else {\r\n\r\n\r\n                             let result = JSON.parse(obj).results;\r\n                             for (let x in result) {\r\n\r\n                                 if (stop === 1 && result.hasOwnProperty(x)) {\r\n                                     ReactDOM.findDOMNode( document.getElementById('req_error')).\r\n                                     querySelectorAll('table').forEach(function (val) {\r\n                                         val.remove();\r\n\r\n                                     });\r\n\r\n                                     let img = \"http://image.tmdb.org/t/p/w185/\" + result[x].poster_path;\r\n                                     ReactDOM.findDOMNode(document.getElementById('item')).innerHTML += `<table id='items'>\r\n                                     <tbody><tr><tr><th ><img  style='float:left; width: 15%' src=\"${img}\"/>\r\n                                     <div id='movie_title'><div id='vote_average'><div>${result[x].vote_average}</div></div>\r\n                                      <span class='movie_title'> ${result[x].original_title}</span></div></span> \r\n                                      <div id='overview'>${result[x].overview.substr(0, 720)}<div> </div></div> \r\n                                      <div id='emotional'> <span class=\"rating\" class='feelings'  >&star;</span>\r\n                                      <span class=\"rating_content\"><span class=\"stars\" id=\"star_1\">&star;</span><span class=\"stars\" id=\"star_2\">&star;\r\n                                      </span> <span class=\"stars\" id=\"star_3\">&star;</span> <span class=\"stars\" id=\"star_4\">&star;</span>\r\n                                       <span class=\"stars\" id=\"star_5\">&star;</span>  </span><span>Rating</span>\r\n                                      <span class='feelings'>&heartsuit;</span> <span>  Favorite</span><span class='feelings'>&#9016;</span>\r\n                                      <span>  Add to list</span><span class='feelings'>&#9003;</span> <span>  Remove</span>\r\n                                      </div> </th> </tr> <tr> <td width='400'> </td> </tr> </tr></tbody></table>`;\r\n                                     ReactDOM.findDOMNode(document.getElementById('qty')).innerHTML = JSON.parse(obj).total_pages;\r\n                                     let ratingContent=document.getElementsByClassName(\"rating_content\");\r\n                                     let rating=document.getElementsByClassName(\"rating\");\r\n                                     let stars=document.getElementsByClassName(\"stars\");\r\n\r\n\r\n\r\n                                         ['click','mouseleave','mouseenter'].forEach(function (event) {\r\n                                             for (let x in rating){\r\n\r\n                                                 rating.item(Number(x)).addEventListener(event,function () {\r\n\r\n                                             ratingContent.item(Number(x)).style.display=\"inline\";\r\n                                             stars[x].addEventListener(event,getMouseDirection,false);\r\n\r\n                                               stars[x].addEventListener(event,function (event) {\r\n                                                 event.preventDefault();\r\n                                                 event.stopImmediatePropagation();\r\n                                                 event.stopPropagation();\r\n                                                 if(event.type===\"mouseleave\"){\r\n\r\n                                                     ratingContent.item(Number(x)).style.display=\"none\";\r\n                                                     return false;\r\n                                                 }\r\n\r\n                                                 if(event.type===\"mouseenter\"){\r\n                                                     for(let i=0;i<stars.length;i++){\r\n\r\n\r\n\r\n\r\n                                                    [\"mousemove\"].forEach(function (val) {\r\n\r\n\r\n                                                    stars[i].addEventListener(val,function (e) {\r\n                                                        event.preventDefault();\r\n                                                        event.stopPropagation();\r\n                                                        event.stopImmediatePropagation();\r\n                                                        if (oldX < e.pageX) {\r\n                                                            xDirection = \"right\";\r\n                                                        } else {\r\n                                                            xDirection = \"left\";\r\n                                                        }\r\n\r\n                                                        //deal with the vertical case\r\n                                                        if (oldY < e.pageY) {\r\n                                                            yDirection = \"down\";\r\n                                                        } else {\r\n                                                            yDirection = \"up\";\r\n                                                        }\r\n\r\n                                                        oldX = e.pageX;\r\n                                                        oldY = e.pageY;\r\n                                                        if([\"right\"].includes(xDirection)   ){\r\n                                                            stars[i].style.color=\"gold\";\r\n                                                        }else  if([\"left\"].includes(xDirection)) {\r\n                                                            stars[i].style.color=\"white\";\r\n                                                        }\r\n\r\n\r\n\r\n\r\n                                                    },false);\r\n\r\n                                                     })\r\n\r\n                                                     }\r\n                                                     ratingContent.item(Number(x)).style.display=\"inline\";\r\n                                                     return false;\r\n                                                 }\r\n\r\n                                             });\r\n\r\n                                                 this.addEventListener(event,function (event) {\r\n                                                     event.preventDefault();\r\n                                                     if(event.type===\"mouseleave\"){\r\n\r\n                                                         ratingContent.item(Number(x)).style.display=\"none\";\r\n                                                         return false;\r\n                                                     }\r\n\r\n                                                 });\r\n                                             return false;\r\n                                         })\r\n\r\n                                             }\r\n                                         });\r\n\r\n\r\n\r\n\r\n                                     ReactDOM.findDOMNode(document.getElementById('total_pages_title')).innerHTML=\"Total pages\";\r\n                                     clearInterval(time);\r\n\r\n                                 }\r\n\r\n\r\n                             }\r\n                               }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n             }, 1000)\r\n                     }\r\n\r\n\r\n\r\n\r\n\r\n                 }else {\r\n\r\n                     ReactDOM.findDOMNode(document.getElementById('total_pages_title')).innerHTML=\"loading...\"\r\n\r\n                 }\r\n\r\n             });\r\n\r\n              xhr.responseType = \"text\";\r\n              xhr.send(data);\r\n         }\r\n\r\n\r\n        return (<div id='scroll_list'>\r\n            <div id=\"item\" ref=\"item\"><div id=\"req_error\"> </div><div id=\"total_pages\"><div id=\"total_pages_title\">Total Pages </div><div id=\"qty\">\r\n\r\n            </div> </div> </div>\r\n        </div>);\r\n\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\n\r\nvar xDirection = \"\";\r\nvar yDirection = \"\";\r\n\r\nvar oldX = 0;\r\nvar oldY = 0;\r\n\r\nfunction getMouseDirection(e) {\r\n    //deal with the horizontal case\r\n    if (oldX < e.pageX) {\r\n        xDirection = \"right\";\r\n    } else {\r\n        xDirection = \"left\";\r\n    }\r\n\r\n    //deal with the vertical case\r\n    if (oldY < e.pageY) {\r\n        yDirection = \"down\";\r\n    } else {\r\n        yDirection = \"up\";\r\n    }\r\n\r\n    oldX = e.pageX;\r\n    oldY = e.pageY;\r\n\r\n    console.log(xDirection + \" \" + yDirection);\r\n}\r\n\r\n\r\nexport  default View;"]},"metadata":{},"sourceType":"module"}